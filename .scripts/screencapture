#!/bin/bash

# TODO Add --output parameter
# TODO Maybe add --audio-device parameter, maybe...
# TODO Check multiple display support

FORMAT="image"
EXT="png"
SELECT=false

for i in "$@"; do
case $i in
    -f=*|--format=*)
        FORMAT="${i#*=}"
        case $FORMAT in
            image|video|gif)
            ;;
            *)
                echo "error: invalid format '$FORMAT'"
                exit 1
            ;;
        esac
        shift
        ;;
    -s|--select)
        SELECT=true
        shift
    ;;
    -h|--help)
        # TODO Write help
        echo "This is help."
        exit 0
    ;;
    *)
        echo "error: invalid argument '$i'"
        exit 1
    ;;
esac
done

OUTPUT="$HOME/$(date +screen-%F-%H-%M-%S)"

if $SELECT ; then
    SLOP=$(slop -l -c 1,1,1,0.25 -f "%x %y %w %h %g %i") || exit 1
    read -r X Y W H G ID < <(echo $SLOP)
fi

case $FORMAT in
    image)
        EXT="png"
        if $SELECT ; then
            import -window root -crop $G "$OUTPUT.$EXT"
        else
            import -window root "$OUTPUT.$EXT"
        fi
        xclip -selection clipboard -t image/$EXT -i "$OUTPUT.$EXT"
    ;;
    video|gif)
        EXT="mkv"
        TMPFILE="$(mktemp -t screen-XXXXXXX.$EXT)"
        if [ "$FORMAT" == "gif" ]; then
            FPS=24
        else
            FPS=60
        fi
        trap "rm -f '$TMPFILE'" 0
        if $SELECT ; then
            ffmpeg -y -f x11grab -framerate $FPS -s ${W}x${H} -i :0.0+$X,$Y -f pulse -ac 2 -i default "$TMPFILE"
        else
            resolution=$(xrandr | grep current | sed -r "s/^.*current ([0-9]+) x ([0-9]+).*$/\1x\2/")
            ffmpeg -y -s $resolution -f x11grab -framerate $FPS -i :0.0 -f pulse -ac 2 -i default "$TMPFILE"
        fi
        if [ "$FORMAT" == "gif" ]; then
            EXT="gif"
            ffmpeg -y -i "$TMPFILE"  -vf fps=10,palettegen "/tmp/palette.png"
            ffmpeg -i "$TMPFILE" -i "/tmp/palette.png" -filter_complex "paletteuse" "$OUTPUT.$EXT"
        else
            mv "$TMPFILE" "$OUTPUT.$EXT"
        fi
    ;;
esac

notify-send screencapture "$FORMAT: $(basename $OUTPUT.$EXT)"
